<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>concurrency on lbarasti&#39;s blog</title>
    <link>https://lbarasti.com/tags/concurrency/</link>
    <description>Recent content in concurrency on lbarasti&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Mon, 25 Jan 2021 20:12:48 +0000</lastBuildDate>
    
	<atom:link href="https://lbarasti.com/tags/concurrency/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ruby Ractor</title>
      <link>https://lbarasti.com/post/ruby_ractor/</link>
      <pubDate>Mon, 25 Jan 2021 20:12:48 +0000</pubDate>
      
      <guid>https://lbarasti.com/post/ruby_ractor/</guid>
      <description>Let&amp;rsquo;s have a look at the new Ractor API introduced by Ruby 3.0.</description>
    </item>
    
    <item>
      <title>5 use cases for Crystal&#39;s select statement</title>
      <link>https://lbarasti.com/post/select_statement/</link>
      <pubDate>Thu, 30 Apr 2020 23:03:29 +0100</pubDate>
      
      <guid>https://lbarasti.com/post/select_statement/</guid>
      <description>Usage of the select statement</description>
    </item>
    
    <item>
      <title>Live coding a URL checker in Crystal</title>
      <link>https://lbarasti.com/post/url_checker_series/</link>
      <pubDate>Sun, 12 Jan 2020 22:12:33 +0100</pubDate>
      
      <guid>https://lbarasti.com/post/url_checker_series/</guid>
      <description>A series of live coding sessions exploring Crystalâ€™s concurrency, with emphasis on Channels, Fibers and the CSP model, by means of building a simple terminal-based app.</description>
    </item>
    
    <item>
      <title>2-way communication between Fibers</title>
      <link>https://lbarasti.com/post/two_way_comm_between_fibers/</link>
      <pubDate>Mon, 25 Nov 2019 22:12:33 +0100</pubDate>
      
      <guid>https://lbarasti.com/post/two_way_comm_between_fibers/</guid>
      <description>In this article, we show a simple pattern to achieve two-way communication between fibers, and then iterate over it, to make it more user-friendly.</description>
    </item>
    
  </channel>
</rss>